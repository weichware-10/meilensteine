@startuml zoommaps
' skinparam backgroundColor transparent
() System #DA70D5
top to bottom direction

' --- TUTORIAL ---
abstract Tutorial<t: ToolType> {
  - t: ToolType
  __public method__
  + start() : void
  __private methods__
  - getConfigState() : boolean
  - setConfigState(state: boolean) : void
  - show() : boolean
  __abstract methods__
  - {abstract} tutorial() : void
}

enum ToolType {
  ZOOM
  EYETRACKING
  CODECHARTS
}

' Interaktionen
Tutorial::t -r- ToolType
Tutorial -l- Config


' --- BILD ---

abstract Bild {
  + load(url: String) : void
  + show() : void
}

' === ZOOM MAPS ===
package ZoomMaps {

    ' Zoom Input
    class ZoomInput {
        - onClick() : void
        - onScroll() : void
    }

    ' Zoom Tutorial 
    class ZoomTutorial {
        - tutorial() : void
    }
  
    ' Zoom Calculator
    class ZoomCalculator {
        - speed: float
        - position: float[3]
        __public method__
        + processInput(raw_input: unknown) : void
        __private methods__
        - calculate(raw_input: unknown) : float[3]
        - save(position: float[3]) : boolean
    }

    ' Zoom Bild
    class ZoomBild {
        + move(position: float[3]): float[3]
    }


    ' Vererbungen
    Bild <|-- ZoomBild
    Tutorial <|-- ZoomTutorial

    ' Interaktionen
    ZoomInput -- ZoomCalculator::processInput
    ZoomCalculator::processInput  -- ZoomBild::move : > moves

    ' Andere Module
    ZoomCalculator::save -- SpeicherMedium : > saves Data
    ZoomCalculator::speed -l- Config : < speed
    ZoomInput -r- System : > listens to
  
}

' Blackboxen / Andere Module
package Config {}

package SpeicherMedium {}

@enduml
