@startuml analyseclient

' === ANALYSE CLIENT ===
package Analyse-Client{
  
  ' Client
  class Client {
    - data: Data
    - dataForComp: Data
    - analyseTypes: List<AnalyseType>
    - analyzedData: List<String>
    __public methods__
    + getData(start: Date, end: Date, dataType: ToolType): boolean
    + setAnalyseTypes(): boolean
    + displayAnalyzedData(): void
    + export(): boolean
    + analyseData(): boolean
  }

  ' Analyse
  abstract Analyse {
    - calcRelFreq(data: Data): List<List<Float>>
    - createTimeTable(data: Data): List<List<Float>>
  }

  ' Heatmap
  class Heatmap {
    - heatmap: List<List<Float>>
    __public methods__
    + createHeatmap(data: Data): String
    + compHeatmaps(otherHeatmap: Heatmap): String
  }

  ' Verlauf
  class Verlauf {
    __public method__
    + createVerlauf(data: Data): String
    __private method__
    - drawDiagramm(diagrammData: List<List<Float>>): String
  }

  ' Diagramm
  class Diagramm {
    __public methods__
    + createRelFreqImgArea(data: Data): String
    + createViewTimeDistr(data: Data): String
    __private methods__
    - calcViewTimeDistr(): float[4]
    - drawDiagramm(diagrammData: float[4], type: int): String
  }

  ' Type
  enum AnalyseType {
    HEATMAP
    COMPHEATMAP
    VERLAUF
    RELFRQIMGAREA
    VIEWTIMEDISTR
  }

  ' ClientGUI
  class ClientGUI {
    - client: Client
    __public method__
    + showClientGUI(): void
  }

  ' Vererbung
  Analyse <|-u- Heatmap
  Analyse <|-u- Verlauf
  Analyse <|-u- Diagramm

  ' Interaktionen
  Client -d-> Heatmap 
  Client -d-> Verlauf
  Client -d-> Diagramm
  Client -l- AnalyseType
  Client <-r- ClientGUI : < graphische BenutzeroberflÃ¤che

}

' Blackbox
package SpeicherMedium {}

package DataStructure {
  
  ' Typen der erhobenen Daten
  enum ToolType {
    ZOOMMAPS
    EYETRACKING
    CODECHARTS
  }

  ' Daten
  class Data {
    + type: ToolType
    + data: unknown
    + config_id: int
  }

  ' Interaktionen
  Data::type -l- ToolType
}

() System #DA70D5

' Interaktionen
Client::getData -u- ToolType
Client::export -- System: > save to
Client -u- SpeicherMedium : < gets Data

@enduml
